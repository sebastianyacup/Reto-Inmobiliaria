name: CI/CD Pipeline Front  # Nombre de la canalización

on:  # Evento que activa la ejecución de la canalización
  push:  # Se activa cuando se realiza un push
    branches:  # Especifica la rama que activa la canalización
      - main  # Se activa cuando se realiza un push en la rama 'main'

jobs:  # Definición de los trabajos que se ejecutarán en la canalización
  build-and-deploy:  # Nombre del trabajo para construir y desplegar
    runs-on: ubuntu-latest  # Entorno en el que se ejecutará el trabajo (en este caso, Ubuntu)

    steps:  # Definición de los pasos del trabajo
      - name: Checkout code  # Paso para obtener el código del repositorio
        uses: actions/checkout@v2  # Utiliza la acción 'checkout' para obtener el código del repositorio

      - name: Set up Node.js  # Paso para configurar Node.js
        uses: actions/setup-node@v2  # Utiliza la acción 'setup-node' para configurar Node.js
        with:
          node-version: '14'  # Especifica la versión de Node.js a utilizar

      - name: Install dependencies  # Paso para instalar las dependencias del proyecto
        run: npm install  # Ejecuta el comando 'npm install' para instalar las dependencias

      - name: Run tests  # Paso para ejecutar las pruebas del proyecto
        run: npm test  # Ejecuta el script de pruebas definido en el archivo package.json

      - name: Build  # Paso para construir la aplicación
        run: npm run build  # Ejecuta el script de construcción definido en el archivo package.json

      - name: Increment version  # Paso para incrementar automáticamente la versión del proyecto
        run: npm version patch --force  # Incrementa el número de versión de forma automática

      - name: Generate changelog  # Paso para generar el registro de cambios
        run: git log --pretty=format:"- %s" > CHANGELOG.md  # Genera el registro de cambios basado en los mensajes de commit

      - name: Deploy to staging  # Paso para desplegar la aplicación en un entorno de puesta en escena
        run: |
          docker-compose up -d --build  # Construye y levanta los contenedores de la aplicación en el entorno de puesta en escena
      